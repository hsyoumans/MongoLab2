Reports on people collection:
1. Average age
   ? Expected Result: 41.41
	db.people2.aggregate([
      {$group:{_id: null, avgAge: {$avg: "$age"}}}
   ]);

2. Average age by gender
   ? Expected Result: Female: 42.04, Male: 40.60
	db.people2.aggregate([
      {$group: { _id: "$gender", avgAge: {$avg: "$age"}}}
   ]);

3. Number of people by gender
   ? Expected Result: Female: 113, Male: 87
	db.people2.aggregate([
      {$group: { _id: "$gender", totalPerGender: {$sum: 1}}}
   ]);

4. 3 oldest people
   ? Expected Result: Phyllis Gray 81, Melissa Banks 79, Walter Bishop 76
	db.people2.aggregate([
      {$sort: {age: -1}}, 
      {$project: {"_id": 0, "name": {$concat: ["$first_name"," ", "$last_name"]}, "age": "$age"}}, {$limit: 3}
   ]);

5. 5 youngest people, display only their names as one value (first + " " + last) and their ages
   ? Expected Result: Nicholas Hunter 17, Kenneth Burns 18, Kathy Hayes 19, Edward Hayes 21, Steve Vasquez 21)
	db.people2.aggregate([
      {$sort: {age: 1}}, 
      {$project: {"_id": 0, "name": {$concat: ["$first_name"," ", "$last_name"]}, "age": "$age"}}, {$limit: 5}
   ]);

6. Average number of children
   ? Expected Result: 2.34
	db.people2.aggregate([
      {$group: {_id: null, avgNumChildren:{$avg:{$size:"$children"}}}}
   ]);

7. Name and age of children in Michigan who are under age ten
   ? Expected Result: Adam 0, Janice 1, Judith 3, Beverly 4, Antonio 6, Jeremy 7
	db.people2.aggregate([
      {$unwind: "$children"}, 
      {$match: {state: "Michigan", "children.age":{$lt:10}}}, 
      {$project: {"_id": 0, "Name": "$children.name", "Age": "$children.age"}}
   ]);

8. Average age of child by state, sorted with oldest first
   ? Expected Result: Rhode Island 20, Idaho 20, Louisiana 15.7, Kentucky 13.1, Indiana 12.6, ...
	db.people2.aggregate([
      {$unwind: "$children"},
      {$group: {_id: "$state",
      avgAge:{$avg:{$sum: "$children.age"}}
      }},
      {$sort: {avgAge: 1}},
      {$project: {"avgAge":{$round: ["$avgAge", 1]}, "State": "$state"}}
   ]);


Reports on orders collection:
9. Find the total dollar amount of all sales ever. Use the total field.
   ? Expected Result: 680.92
	db.orders.aggregate([
      {$group: {_id: null, "TotalSales": {$sum: "$total"}}},
      {$project: {"_id": 0, "TotalSales": 1}}
   ]);

10. Find the total dollar amount of sales on 2017-05-22. Use the total field.
   ? Expected Result: 271.2
	db.orders.aggregate([
      {$match: {date: "2017-05-22"}},
      {$group: {"_id": "$date", "Total": {$sum: "$total"}}},
      {$project: {"_id": 0, "Total": "$Total"}}
   ]);

11. Find the date with the greatest number of orders. Include the date and the number of orders.
   ? Expected Result: 2017-05-04 3
	db.orders.aggregate([
      {$sortByCount: "$date"},
      {$limit: 1}
   ]);

12. Find the date with the greatest total sales. Include the date and the dollar amount for that day.
   ? Expected Result: 2017-05-22 $271.2
	db.orders.aggregate([
      {$group: {"_id": "$date", "Total": {$sum: "$total"}}}, 
      {$sort: {Total: -1}},
      {$limit: 1}
   ]);

13. Find the top three products that have had the greatest number sold. Include product name and number sold.
   ? Expected Result: Pine Nuts 13, Cheese 8, Top Hat 5
	db.orders.aggregate([
      {$unwind: "$items"},
      {$group: {"_id": "$items.product", "total":{"$sum": "$items.count"}}},
      {$sort: {"total": -1}},
      {$limit: 3},
      {$project: {"items.product":1, "total":1}}
   ]);

14. Find the top item that has the greatest revenue (number sold * price). Include product name and dollar amount of sales.
   ? Expected Result: Shoes 197.98
	db.orders.aggregate([
      {$unwind: "$items"},
      {$group: {"_id": "$items.product", "total":{"$sum":{$multiply:["$items.price", "$items.count"]}}}},
      {$sort: {"total": -1}},
      {$limit: 1},
      {$project: {"items.product":1, "total":1}}
   ]);
